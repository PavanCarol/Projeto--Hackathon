// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the theme object.
$PetService-theme: mat.define-theme((
  color: (
    theme-type: light,
    primary: mat.$azure-palette,
    tertiary: mat.$blue-palette,
  ),
  density: (
    scale: 0,
  )
));
* {
  font-family: "Poppins", sans-serif;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
:root {
  @include mat.all-component-themes($PetService-theme);
}

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($theme);
/* You can add global styles to this file, and also import other style files */

html,
body {
  width: 100%;
  height: 100%;
  margin: 0; 
}
:host {
  overflow: hidden;
  display: flex;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

input,
button{ font-family: "Poppins", sans-serif; }

.mdc-text-field--filled:not(.mdc-text-field--disabled) {
  background-color: var(--mdc-filled-text-field-container-color);
  border-radius: 10px !important;
  height: 74px !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}
.mat-mdc-form-field {
  --mat-mdc-form-field-floating-label-scale: 0.75;
  display: inline-flex;
  flex-direction: column;
  min-width: 0;
  text-align: left;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}
.mdc-line-ripple::before, .mdc-line-ripple::after {
  position: absolute;
  width: 100%;
  border-bottom-style: none !important; 
  content: "";
}
.mat-mdc-form-field-error {
  display: block;
  color: var(--mat-form-field-error-text-color);
  font-size: 16px;
  margin-top: 6px;
  font-weight: 500;
}
wrapper {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  padding: 0 5px;
}
.mat-mdc-form-field-flex {
  display: inline-flex;
  align-items: baseline;
  box-sizing: border-box;
  width: 100%;
  padding-right: 10px !important
}
.mat-mdc-icon-button .mat-mdc-button-touch-target {
  position: absolute;
  top: 50%;
  height: 34px;
  left: 50%;
  width: 35px;
  transform: translate(-50%, -50%);
  display: var(--mat-icon-button-touch-target-display);
}
input:-internal-autofill-selected {
  appearance: menulist-button;
  background-image: none !important;
  background-color: var(--mdc-filled-text-field-container-color) !important;
  color: fieldtext !important;
}

.mat-drawer-container {
  position: relative;
  z-index: 1;
  color: var(--mat-sidenav-content-text-color);
  background-color: var(--mat-sidenav-content-background-color);
  box-sizing: border-box;
  -webkit-overflow-scrolling: touch;
  display: block;
  overflow: hidden;
  background: #f6f6f6 !important;
}